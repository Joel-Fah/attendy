# Generated by Django 5.1 on 2024-08-23 13:07

import core.models
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0005_alter_course_finish_time_alter_course_start_time_and_more'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='course',
            name='finish_time',
        ),
        migrations.RemoveField(
            model_name='lecturer',
            name='status',
        ),
        migrations.RemoveField(
            model_name='student',
            name='status',
        ),
        migrations.AddField(
            model_name='course',
            name='end_time',
            field=models.TimeField(default=django.utils.timezone.now, help_text='End time of the course'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='course',
            name='student_delegate_assistant',
            field=models.ForeignKey(blank=True, help_text='Student delegate assistant in charge of this course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_delegate_assistant', to='core.student'),
        ),
        migrations.AddField(
            model_name='lecturer',
            name='is_present',
            field=models.BooleanField(default=True, help_text='Is the lecturer present?'),
        ),
        migrations.AddField(
            model_name='student',
            name='is_present',
            field=models.BooleanField(default=True, help_text='Is the student present?'),
        ),
        migrations.AlterField(
            model_name='course',
            name='code',
            field=models.CharField(help_text='Course code', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='duration',
            field=models.DurationField(blank=True, help_text='Duration of the course', null=True),
        ),
        migrations.AlterField(
            model_name='course',
            name='is_catchup',
            field=models.BooleanField(default=False, help_text='Is this a catch-up course?'),
        ),
        migrations.AlterField(
            model_name='course',
            name='semester',
            field=models.CharField(choices=[('FALL', 'FALL'), ('SPRING', 'SPRING'), ('SUMMER', 'SUMMER')], help_text='Semester of the course', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='start_time',
            field=models.TimeField(help_text='Start time of the course'),
        ),
        migrations.AlterField(
            model_name='course',
            name='student_delegate',
            field=models.ForeignKey(blank=True, help_text='Student delegate in charge of this course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_delagate', to='core.student'),
        ),
        migrations.AlterField(
            model_name='course',
            name='title',
            field=models.CharField(help_text='Name of the course', max_length=255),
        ),
        migrations.AlterField(
            model_name='course',
            name='year',
            field=models.IntegerField(default=core.models.get_current_year, help_text="Semesters' year of the course"),
        ),
        migrations.AlterField(
            model_name='lecturer',
            name='arrival',
            field=models.TimeField(help_text='Time of arrival of the lecturer'),
        ),
        migrations.AlterField(
            model_name='lecturer',
            name='departure',
            field=models.TimeField(help_text='Time of departure of the lecturer'),
        ),
        migrations.AlterField(
            model_name='lecturer',
            name='name',
            field=models.CharField(help_text='Name of the lecturer', max_length=255),
        ),
        migrations.AlterField(
            model_name='student',
            name='department',
            field=models.CharField(choices=[('BMS', 'BMS'), ('ICT', 'ICT')], help_text='Department of the student: BMS or ICT', max_length=255),
        ),
        migrations.AlterField(
            model_name='student',
            name='email',
            field=models.EmailField(help_text='Student email address (preferably ICT University email: @ictuniversity.edu.cm)', max_length=254),
        ),
        migrations.AlterField(
            model_name='student',
            name='is_delegate',
            field=models.BooleanField(default=False, help_text='Is the student a course delegate?'),
        ),
        migrations.AlterField(
            model_name='student',
            name='matricule',
            field=models.CharField(default='ICTUXXXXxxxx', help_text='Student matricule', max_length=255, unique=True),
        ),
        migrations.AlterField(
            model_name='student',
            name='name',
            field=models.CharField(help_text='Name of the student', max_length=255),
        ),
        migrations.AlterField(
            model_name='student',
            name='phone',
            field=models.CharField(help_text='Student phone number', max_length=255),
        ),
        migrations.AlterField(
            model_name='teachingrecord',
            name='course',
            field=models.ForeignKey(help_text='Course taught', on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='core.course'),
        ),
        migrations.AlterField(
            model_name='teachingrecord',
            name='description',
            field=models.TextField(help_text='What was taught in the course'),
        ),
        migrations.AlterField(
            model_name='teachingrecord',
            name='lecturer',
            field=models.ForeignKey(help_text='Lecturer teaching the course', on_delete=django.db.models.deletion.CASCADE, related_name='teaching_records', to='core.lecturer'),
        ),
        migrations.AlterField(
            model_name='teachingrecord',
            name='quality_assurance',
            field=models.CharField(blank=True, choices=[('APPROVED', 'Approved'), ('REJECTED', 'Rejected')], help_text='Quality assurance of the course', max_length=255, null=True),
        ),
    ]
