# Generated by Django 5.1 on 2024-09-07 09:42

import core.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveSmallIntegerField(choices=[(1, 'Level 1'), (2, 'Level 2'), (3, 'Level 3'), (4, 'Level 4')], help_text='Level of the class')),
                ('group', models.PositiveSmallIntegerField(default=1, help_text='Group of the class')),
                ('semester', models.CharField(choices=[('FALL', 'FALL'), ('SPRING', 'SPRING'), ('SUMMER', 'SUMMER')], help_text='Semester of the course', max_length=255)),
                ('year', models.IntegerField(default=core.models.get_current_year, help_text="Semesters' year of the course")),
                ('department', models.CharField(choices=[('BMS', 'BMS'), ('ICT', 'ICT')], help_text='Department of the class: BMS or ICT', max_length=255)),
                ('slug', models.SlugField(editable=False, help_text='Slug of the class', max_length=255)),
                ('about', models.TextField(blank=True, max_length=255, null=True)),
                ('main_hall', models.CharField(help_text='Main hall of the class. Enter <strong>Online</strong> for not onsite levels.', max_length=255)),
                ('secondary_hall', models.CharField(blank=True, help_text='Secondary hall of the class', max_length=255, null=True)),
                ('is_visible', models.BooleanField(default=True, help_text='Whether the class should be displayed or not')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this class level was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this class level was last updated')),
            ],
            options={
                'verbose_name': 'Class Level',
                'verbose_name_plural': 'Class Levels',
            },
        ),
        migrations.CreateModel(
            name='Lecturer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the lecturer', max_length=255)),
                ('slug', models.SlugField(editable=False, help_text='Slug of the lecturer', max_length=255)),
                ('department', models.CharField(choices=[('BMS', 'BMS'), ('ICT', 'ICT')], default='ICT', help_text='Department of the lecturer: BMS or ICT', max_length=255)),
                ('phone', models.CharField(blank=True, help_text="Lecturer's phone number: 6xx xx xx xx", max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this lecturer was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this lecturer was last updated')),
            ],
            options={
                'verbose_name': 'Lecturer',
                'verbose_name_plural': 'Lecturers',
            },
        ),
        migrations.CreateModel(
            name='TeachingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(help_text='What was taught in the course')),
                ('quality_assurance', models.CharField(blank=True, choices=[('Approved', 'Approved'), ('Rejected', 'Rejected')], default='Approved', help_text='Quality assurance of the course', max_length=255, null=True)),
                ('lecturer_arrival_time', models.TimeField(blank=True, help_text='Time of arrival of the lecturer', null=True)),
                ('lecturer_departure_time', models.TimeField(blank=True, help_text='Time of departure of the lecturer', null=True)),
                ('lecturer_duration', models.DurationField(blank=True, editable=False, help_text='Actual duration of the course by the lecturer (Automatically calculated)', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this teaching record was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this teaching record was last updated')),
            ],
            options={
                'verbose_name': 'Teaching Record',
                'verbose_name_plural': 'Teaching Records',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(help_text='Course code', max_length=7, unique=True)),
                ('title', models.CharField(help_text='Name of the course', max_length=255)),
                ('slug', models.SlugField(editable=False, help_text='Slug of the course', max_length=255)),
                ('semester', models.CharField(choices=[('FALL', 'FALL'), ('SPRING', 'SPRING'), ('SUMMER', 'SUMMER')], help_text='Semester of the course', max_length=255)),
                ('year', models.IntegerField(default=core.models.get_current_year, help_text="Semesters' year of the course")),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this course was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this course was last updated')),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_level_courses', to='core.classlevel')),
                ('lecturer', models.OneToOneField(blank=True, help_text='Lecturer teaching the course', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_lecturer', to='core.lecturer')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
            },
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course_date', models.DateField(help_text='Date the course is taught')),
                ('course_start_time', models.TimeField(help_text='Time the course started')),
                ('course_end_time', models.TimeField(help_text='Time the course ended')),
                ('course_duration', models.DurationField(blank=True, editable=False, help_text='Actual duration of the course (Automatically calculated)', null=True)),
                ('is_catchup', models.BooleanField(default=False, help_text='Is the course a catch-up course?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this course attendance was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this course attendance was last updated')),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_level_attendance', to='core.classlevel')),
                ('course', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='course_attendance', to='core.course')),
                ('teaching_record', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='teaching_record_attendance', to='core.teachingrecord')),
            ],
            options={
                'verbose_name': 'Attendance',
                'verbose_name_plural': 'Attendances',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the student', max_length=255)),
                ('slug', models.SlugField(editable=False, help_text='Slug of the student', max_length=255)),
                ('student_number', models.CharField(default='ICTUXXXXxxxx', help_text='Student number', max_length=255, unique=True)),
                ('email', models.EmailField(help_text='Student email address (preferably ICT University email: @ictuniversity.edu.cm)', max_length=254)),
                ('department', models.CharField(choices=[('BMS', 'BMS'), ('ICT', 'ICT')], help_text='Department of the student: BMS or ICT', max_length=255)),
                ('phone', models.CharField(help_text='Student phone number', max_length=255)),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], help_text='Gender of the student: Male or Female', max_length=255)),
                ('is_delegate', models.BooleanField(default=False, help_text='Is the student a course delegate?')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this student was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this student was last updated')),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_level_students', to='core.classlevel')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.CreateModel(
            name='CourseDelegate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('delegate', 'Delegate'), ('assistant', 'Assistant')], default='delegate', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this student delegate was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this student delegate was last updated')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_delegates', to='core.course')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_delegates', to='core.student')),
            ],
            options={
                'verbose_name': 'Course Delegate',
                'verbose_name_plural': 'Course Delegates',
            },
        ),
        migrations.CreateModel(
            name='ClassLevelUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('class_level', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_level_users', to='core.classlevel')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='class_level_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'class_level')},
            },
        ),
        migrations.CreateModel(
            name='CourseAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time this enrollment was added')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time this enrollment was last updated')),
                ('attendance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_attendance', to='core.attendance')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_enrollments', to='core.student')),
            ],
            options={
                'verbose_name': 'Course Attendance',
                'verbose_name_plural': 'Course Attendances',
                'unique_together': {('student', 'attendance')},
            },
        ),
        migrations.AddConstraint(
            model_name='attendance',
            constraint=models.UniqueConstraint(fields=('course', 'teaching_record'), name='unique_course_record'),
        ),
    ]
